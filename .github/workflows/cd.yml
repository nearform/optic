name: cd

on:
  push:
    tags:
      - v*

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCP_PROVIDER_NAME }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - id: update-secrets
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

          for secret in optic-firebase-client-email optic-firebase-project-id optic-firebase-private-key
          do
            # delete the secret
            gcloud secrets delete $secret

            # re-create the secret
            gcloud secrets create --locations=${{ secrets.GCP_CLOUDRUN_SERVICE_REGION }} --replication-policy=user-managed $secret
          done

          # update the secrets
          echo "${{ secrets.FIREBASE_CLIENT_EMAIL }}" | gcloud secrets versions add optic-firebase-client-email --data-file=-
          echo "${{ secrets.FIREBASE_PROJECT_ID }}" | gcloud secrets versions add optic-firebase-project-id --data-file=-
          echo "${{ secrets.FIREBASE_PRIVATE_KEY_BASE64 }}" | gcloud secrets versions add optic-firebase-private-key --data-file=-

      - id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ secrets.GCP_CLOUDRUN_SERVICE_NAME }}
          region: ${{ secrets.GCP_CLOUDRUN_SERVICE_REGION }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          secrets: >-
            FIREBASE_CLIENT_EMAIL=optic-firebase-client-email:latest,
            FIREBASE_PROJECT_ID=optic-firebase-project-id:latest,
            FIREBASE_PRIVATE_KEY_BASE64=optic-firebase-private-key:latest
          flags: --allow-unauthenticated --timeout=1800
          source: .
